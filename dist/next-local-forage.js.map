{"version":3,"sources":["next-local-forage.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-local-forage.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var localforage = global.localforage || require('localforage');\n\n  var NxLocalForage = nx.declare('nx.LocalForage', {\n    methods: {\n      init: function(inOptions) {\n        this.options = inOptions;\n        this.store = localforage.createInstance(this.options);\n      },\n      config: function(inOptions) {\n        nx.mix(this.options, inOptions);\n        localforage.config(this.options);\n      },\n      destroy: function() {\n        return localforage.createInstance(this.options);\n      },\n      set: function(inKey, inValue) {\n        return this.store.setItem(inKey, inValue);\n      },\n      sets: function(inObject) {\n        var promises = [];\n        nx.forIn(\n          inObject,\n          function(key, value) {\n            promises.push(this.set(key, value));\n          },\n          this\n        );\n        return Promise.all(promises);\n      },\n      get: function(inKey) {\n        return this.store.getItem(inKey);\n      },\n      gets: function() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n          self.keys().then(function(keys) {\n            var reslves = [];\n            var rejects = [];\n            keys.map(function(key) {\n              self\n                .get(key)\n                .then(function(res) {\n                  reslves.push(res);\n                })\n                .catch(function(err) {\n                  rejects(err);\n                });\n            });\n\n            reslves.length && resove(reslves);\n            rejects.length && reject(rejects);\n          });\n        });\n      },\n      del: function(inKey) {\n        return this.store.removeItem(inKey);\n      },\n      dels: function(inKeys) {\n        var promises = inKeys.map(function(key) {\n          return this.del(key);\n        }, this);\n        return Promise.all(promises);\n      },\n      clear: function() {\n        return this.store.clear();\n      },\n      keys: function() {\n        return this.store.keys();\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxLocalForage;\n  }\n})();\n"]}